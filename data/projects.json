[
    {
        "summary": "#### ArgumentOctopus.com\nA client hired me to create a website from mock-up images. I created HTML and \nCSS from these images using Foundation.\nThen, with a friend, we created the site using Ruby on Rails and deployed it to Amazon EC2 running NGINX, Passenger and PostgreSQL.\nWe used Git for source control and Trello for issue tracking. I set up a Google Apps account for email.\n##### Technologies Involved\n* [Ruby on Rails](http://rubyonrails.org/)\n* [HTML](http://en.wikipedia.org/wiki/HTML)\n* [CSS](http://en.wikipedia.org/wiki/Cascading_Style_Sheets)\n* [Foundation](http://foundation.zurb.com/)\n* [Git](http://git-scm.com/)\n* [Trello](https://trello.com/)\n* [Amazon Web Services](http://aws.amazon.com/)\n* [NGINX](http://nginx.org/)\n* [Passenger](https://www.phusionpassenger.com/)\n* [PostgreSQL](http://www.postgresql.org/)\n* [Google Apps for Business](http://www.google.com/intl/en/enterprise/apps/business/)"
    },
    {
        "summary": "#### YachtCloser\nWorked remotely on a team with [Google Web Toolkit](https://developers.google.com/web-toolkit/), \n[Eclipse](http://www.eclipse.org/), [MySQL](http://www.mysql.com/) on large code base with many \ncustom components. Used [CVS](http://www.nongnu.org/cvs/) for source control and [Trac](http://trac.edgewall.org/) for\n issue tracking and documentation."
    },
    {
        "summary": "#### Ministry Partner Giving Analysis - Cru\nInitially tasked with implementing a monthly report to be delivered to 9,000 Cru staff, integration \nissues arose in the analytics platform that was going to deliver the report. A co-worker and I designed a new platform \nusing the Javascript Client-Side View paradigm. The new version of the report uses Java (JAX-RS, JBoss App Server) on \nthe server, fetching data from an Oracle Answers (BI Analytics tool) via SOAP. I wrote most of the JavaScript and \nworked with a designer on the HTML and CSS. To get started, I used Bootstrap and HTML5 Boilerplate, the Angular.js \nframework to manage communication with the server via REST and the D3.js library to generate SVG charts. GitHub and \nTrello were used to collaborate.\n\n[View a demo of the MPGA](http://mpga-demo.ayecapta.in/)\n\n[View the source code on GitHub](https://github.com/robbyronk/mpga-d3)\n##### Technologies Involved\n* [HTML](http://en.wikipedia.org/wiki/HTML)\n* [CSS](http://en.wikipedia.org/wiki/Cascading_Style_Sheets)\n* [JavaScript](http://en.wikipedia.org/wiki/JavaScript)\n* [Bootstrap](http://twitter.github.com/bootstrap/)\n* [HTML5 Boilerplate](http://html5boilerplate.com/)\n* [REST](http://en.wikipedia.org/wiki/Representational_state_transfer)\n* [AngularJS](http://angularjs.org/)\n* [Git](http://git-scm.com/)\n* [Trello](https://trello.com/)\n* Java\n* [JAX-RS](http://jax-rs-spec.java.net/)\n* [JBoss AS7](http://www.jboss.org/as7)",
        "keywords": "Source Control, Java6"
    },
    {
        "summary": "####Summary Data Test Harness - Cru\nWrote tool in Java to communicate with Oracle Answers and verify summarized tables against detail tables. \nUsed Actors and Futures to achieve high concurrency and high throughput.",
        "keywords": "Java6"
    },
    {
        "summary": "####Google Apps Password Sync - Cru\nRead Google API documentation and extended existing Java system to update a user's \n[Google Apps for Business](http://www.google.com/intl/en/enterprise/apps/business/) password when their Single Sign-On \n[(JASIG CAS)](http://www.jasig.org/cas) password is changed including an exponential backoff algorithm to prevent Denial of Service.",
        "keywords": "Java6"
    },
    {
        "summary": "####Maven-ized Two Legacy Java Applications - Cru\nConverted two Java applications that were previously built using [Eclipse](http://www.eclipse.org/) to \n[Maven](http://maven.apache.org/) and setup to be deployed with a single click using \n[Bamboo](http://www.atlassian.com/software/bamboo/overview).",
        "keywords": "Java6"
    },
    {
        "summary": "####Assembler for Simple Computer Architecture - UCF\n[Common Lisp](http://en.wikipedia.org/wiki/Common_Lisp), with a partner. Collaborated using [Darcs](http://darcs.net/) \nfor source control."
    },
    {
        "summary": "####2010 Google AI Challenge Entry - UCF\nCompeted against friends and strangers online, [Common Lisp](http://en.wikipedia.org/wiki/Common_Lisp). [Contest Homepage](http://planetwars.aichallenge.org/)"
    },
    {
        "summary": "####Networked (UDP) Multi-player Game with AI - UCF\nWith a partner, wrote the only multi-player game in class. \nThe client was written in C and used [SDL](http://www.libsdl.org/) for keyboard controls and \n[OpenGL](http://en.wikipedia.org/wiki/OpenGL) for graphics. The server was written in \n[Common Lisp](http://en.wikipedia.org/wiki/Common_Lisp). The client and server were designed to run on Linux."
    },
    {
        "summary": "####Multi-player Text Editor - UCF\nA group project in Operating Systems class. The server was written in [Common Lisp](http://en.wikipedia.org/wiki/Common_Lisp). \nThe client was written in C, using [ncurses](http://www.gnu.org/software/ncurses/) for the GUI and \n[Embeddable Common Lisp](http://ecls.sourceforge.net/) for the application logic and networking. The client was \ndesigned to run on the Linux command line. I was responsible for coordinating the GUI and ECL. We used \n[Darcs](http://darcs.net/) for source control."
    },
    {
        "summary": "####Event Booking Site - Cru (2005)\nWritten in [PHP](http://php.net/) and used a [MySQL](http://www.mysql.com/) database, this was my first site that \nother people depended on. Used at a 5000+ attendee conference in 2005, 2007, 2009 and 2011 for reserving rooms and \nchecking out equipment."
    },
    {
        "summary": "####Tiny Time Tracker - UCF\n[PHP](http://php.net/) based time tracker with a [MySQL](http://www.mysql.com/) database. Total length \nwas around 50 lines. I wrote it for a group project in school that I was leading."
    },
    {
        "summary": "####Common Lisp Statistics Package - UCF\nStudied for Statistics II class by writing a statistics package.\n\n[View the source code on GitHub](https://github.com/robbyronk/statistics)"
    },
    {
        "summary": "####Automated Web Browser Testing - Cru\nUsed [Selenium](http://seleniumhq.org/) to test Java web application that I inherited maintenance of.",
        "keywords": "Java6"
    },
    {
        "summary": "####Conference Registration System - Cru\nReplaced most of a [Java Server Faces](http://www.oracle.com/technetwork/java/javaee/javaserverfaces-139869.html) \nsite with a [JavaScript](http://en.wikipedia.org/wiki/JavaScript) [jQuery](http://jquery.com/) frontend that \nretrieved data from [REST](http://en.wikipedia.org/wiki/Representational_state_transfer) services."
    },
    {
        "summary": "####Automated Tasks with [AutoHotKey](http://www.autohotkey.com/)\nCreated my own keyboard shortcuts for tedious tasks in environments that did not have keyboard shortcuts and gave a presentation at Cru on it."
    },
    {
        "summary": "####Visualization of Simulated Ecosystem - UCF\nWrote ecosystem simulation for parallel programming class, designed to run on 64 node \n[beowulf cluster](http://en.wikipedia.org/wiki/Beowulf_cluster). Programmed in C, using the \n[OpenMPI](http://www.open-mpi.org/) library for parallelization. For extra credit in the class, I created a \nvisualization of the ecosystem over time by processing the output of the C program with a \nCLI [PHP](http://php.net/) script which produced PNG images using the [GD Library](http://www.boutell.com/gd/). \nI then used [MPlayer](http://www.mplayerhq.hu/design7/news.html) to turn the PNGs into a video."
    }
]
